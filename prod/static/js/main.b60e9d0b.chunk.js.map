{"version":3,"sources":["App.js","serviceWorker.js","config.js","index.js"],"names":["layerTypes","alignments","transformRequest","url","hasQuery","indexOf","Chapter","id","theme","title","image","description","classList","currentChapterID","className","src","alt","dangerouslySetInnerHTML","__html","App","props","state","currentChapter","chapters","config","this","mapStart","location","mapboxgl","accessToken","map","Map","container","mapContainer","style","center","zoom","pitch","bearing","setLayerOpacity","layer","layerType","getLayer","type","getLayerPaintType","forEach","prop","setPaintProperty","opacity","setState","bind","scroller","scrollama","on","loadImage","error","addImage","addSource","data","addLayer","source","layout","setup","step","offset","progress","onStepEnter","response","chapter","find","chap","element","flyTo","console","log","setLayoutProperty","onChapterEnter","length","onStepExit","onChapterExit","addControl","NavigationControl","window","addEventListener","resize","popup","Popup","closeButton","closeOnClick","e","getCanvas","cursor","coordinates","features","geometry","slice","properties","FIELD_NAME","GAS_VOLUME","toLocaleString","TIMES_FLARED","Math","abs","lngLat","lng","setLngLat","setHTML","addTo","remove","NAME","Row","Col","md","subtitle","byline","alignment","key","legend","footer","ref","el","Component","Boolean","hostname","match","showMarkers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b60e9d0b.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport mapboxgl from 'mapbox-gl';\nimport scrollama from 'scrollama';\nimport { Button, ButtonToolbar, Container, Row, Col, } from 'react-bootstrap';\n\nconst layerTypes = {\n\n\n\n    'fill': ['fill-opacity'],\n    'line': ['line-opacity'],\n    'circle': ['circle-opacity', 'circle-stroke-opacity'],\n    'symbol': ['icon-opacity', 'text-opacity'],\n    'raster': ['raster-opacity'],\n    'fill-extrusion': ['fill-extrusion-opacity']\n}\n\nconst alignments = {\n    'left': 'lefty',\n    'center': 'centered',\n    'right': 'righty'\n}\n\nconst transformRequest = (url) => {\n    const hasQuery = url.indexOf(\"?\") !== -1;\t  \n    const suffix = hasQuery ? \"&pluginName=journalismScrollytelling\" : \"?pluginName=journalismScrollytelling\";\t  \n    return {\n      url: url + suffix\n    }\t \n}\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentChapter: props.chapters[0]\n        };\n        // this.setState = this.setState.bind(this);\n    }\n\n    componentDidMount() {\n        const config = this.props;\n        const mapStart = config.chapters[0].location;\n\n        mapboxgl.accessToken = config.accessToken;\n    \n       \n        const map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: config.style,\n            center: mapStart.center,\n            zoom: mapStart.zoom,\n            pitch: mapStart.pitch,\n            bearing: mapStart.bearing,\n            transformRequest: transformRequest\n        });\n\n        // const marker = new mapboxgl.Marker();\n        // if (config.showMarkers) {\n        //     marker.setLngLat(mapStart.center).addTo(map);\n        // }\n\n        function getLayerPaintType(layer) {\n            var layerType = map.getLayer(layer).type;\n            return layerTypes[layerType];\n        }\n\n        function setLayerOpacity(layer) {\n            var paintProps = getLayerPaintType(layer.layer);\n            paintProps.forEach(function(prop) {\n                map.setPaintProperty(layer.layer, prop, layer.opacity);\n            });\n        }\n\n        const setState = this.setState.bind(this);\n\n        // instantiate the scrollama\n        const scroller = scrollama();\n\n\n        \n        map.on('load', function () {\n\n                // 2. reservechapterName\n\n                map.loadImage(\"/reserve.png\", function(error, image) {\n                    if (error) throw error;\n                    map.addImage(\"custom-marker\", image);\n                    map.addSource('reserve', {\n                        type: 'geojson',\n                        data: 'data/reserve.geojson'\n                      });\n                \n                    map.addLayer({ \n                        id: \"reserve\",\n                        type: \"symbol\",\n                        source:'reserve',\n                        \"transition\": {\n                            \"duration\": 300,\n                            \"delay\": 0\n                          },\n                            layout: {\n                                \"icon-image\": \"custom-marker\",\n                                'icon-allow-overlap': true,\n                                'visibility': 'none',\n                            }\n                            });\n\n\n                          \n                \n\n                        // 3. Sea ports\n\n                map.loadImage(\"/ship.png\", function(error, image) {\n                    if (error) throw error;\n                    map.addImage(\"seaport-marker\", image);\n                    map.addSource('seaports', {\n                        type: 'geojson',\n                        data: 'data/seaports.geojson'\n                      });\n                \n                    map.addLayer({ \n                        id: \"seaports\",\n                        type: \"symbol\",\n                        source:'seaports',\n                        \"transition\": {\n                            \"duration\": 300,\n                            \"delay\": 0\n                          },\n                            layout: {\n                                \"icon-image\": \"seaport-marker\",\n                                'visibility': 'none',\n                            }\n                            });\n                    });\n\n                    //  4. Water Ways   \n                    \n                    map.addSource('waters', {\n                        type: 'geojson',\n                        data: 'data/waters.geojson'\n                      });\n\n                      map.addLayer({\n                        \"id\": \"waters\",\n                        \"type\": \"fill\",\n                        \"source\": \"waters\",\n                        \"transition\": {\n                            \"duration\": 300,\n                            \"delay\": 0.2\n                          },\n                        \"layout\": {'visibility': 'none'},\n                        \"paint\": {\n                            \"fill-color\": \"#2244bf\",\n                            \"fill-opacity\": 1,\n                        }\n                    });\n\n                      map.addSource('pipelines', {\n                        type: 'geojson',\n                        data: 'data/pipeline.geojson'\n                      });\n                      map.addLayer({\n                        \"id\": \"pipelines\",\n                        \"type\": \"line\",\n                        \"source\": \"pipelines\",\n                        \"layout\": {'visibility' : 'none'},\n                        \"transition\": {\n                            \"duration\": 500,\n                            \"delay\": 0.5\n                          },\n                        \"paint\": {\n                            \"line-color\": \"#9716ce\",\n                            \"line-opacity\": 1,\n                            \"line-width\": 4\n                        }\n                    });\n\n                    map.addSource('road-express', {\n                        type: 'geojson',\n                        data: 'data/roads.geojson'\n                      });\n                      map.addLayer({\n                        \"id\": \"road-express\",\n                        \"type\": \"line\",\n                        \"source\": \"road-express\",\n                        \"layout\": {'visibility' : 'none'},\n                        \"transition\": {\n                            \"duration\": 300,\n                            \"delay\": 0.1\n                          },\n                        \"paint\": {\n                            \"line-color\": \"#1116ce\",\n                            \"line-opacity\": 1,\n                            \"line-width\": 4\n                        }\n                    });\n\n\n\n                    map.loadImage(\"/house.png\", function(error, image) {\n                        if (error) throw error;\n                        map.addImage(\"settlement-marker\", image);\n\n                    map.addSource('settlement', {\n                        type: 'geojson',\n                        data: 'data/settlement.geojson'\n                      });\n                      \n                    \n                        map.addLayer({ \n                            id: \"settlement\",\n                            type: \"symbol\",\n                            source:'settlement',\n                            \"transition\": {\n                                \"duration\": 300,\n                                \"delay\": 0\n                              },\n                                layout: {\n                                    \"icon-image\": \"settlement-marker\",\n                                    'visibility': 'none',\n                                }\n                                });\n                        });\n\n\n\n\n\n                    \n\n                            \n                            // Existing Gas Plants\n\n\n                map.loadImage(\"/marker.png\", function(error, image) {\n                    if (error) throw error;\n                    map.addImage(\"gas-marker\", image);\n                    map.addSource('gas-existing', {\n                        type: 'geojson',\n                        data: 'data/existingGasPlant.geojson'\n                      });\n                \n                    map.addLayer({ \n                        id: \"gas-existing\",\n                        type: \"symbol\",\n                        source:'gas-existing',\n                        \"transition\": {\n                            \"duration\": 300,\n                            \"delay\": 0\n                          },\n                            layout: {\n                                \"icon-image\": \"gas-marker\",\n                                'visibility': 'none',\n                            }\n                            });\n                    });\n\n\n\n                    map.loadImage(\"/marker.png\", function(error, image) {\n                        if (error) throw error;\n                        map.addImage(\"bunkering-marker\", image);\n\n                    map.addSource('bunkering', {\n                        type: 'geojson',\n                        data: 'data/bunkering.geojson'\n                      });\n                      \n                    \n                        map.addLayer({ \n                            id: \"bunkering\",\n                            type: \"symbol\",\n                            source:'bunkering',\n                            \"transition\": {\n                                \"duration\": 300,\n                                \"delay\": 0\n                              },\n                                layout: {\n                                    \"icon-image\": \"bunkering-marker\",\n                                    'visibility': 'none',\n                                }\n                                });\n                        });\n\n\n\n\n\n                           \n\n\n            // setup the instance, pass callback functions\n            scroller\n            .setup({\n                step: '.step',\n                offset: 0.5,\n                progress: true\n\n            })\n            .onStepEnter(response => {\n                const chapter = config.chapters.find(chap => chap.id === response.element.id);\n                setState({currentChapter:chapter});\n                map.flyTo(chapter.location);\n                console.log(chapter)\n                // if (config.showMarkers) {\n                //     marker.setLngLat(chapter.location.center);\n                // }\n                map.setLayoutProperty(chapter.id, 'visibility', 'visible');\n                if (chapter.onChapterEnter.length > 0) {\n                    chapter.onChapterEnter.forEach(setLayerOpacity);\n                }\n            })\n            .onStepExit(response => {\n                var chapter = config.chapters.find(chap => chap.id === response.element.id);\n                map.setLayoutProperty(chapter.id, 'visibility', 'none');\n                if (chapter.onChapterExit.length > 0) {\n                    chapter.onChapterExit.forEach(setLayerOpacity);\n                }\n            });\n\n\n                \n\n        });\n\n          // Add zoom and rotation controls to the map.\n          map.addControl(new mapboxgl.NavigationControl(),'top-right');\n\n        window.addEventListener('resize', scroller.resize);\n\n\n        var popup = new mapboxgl.Popup({\n            closeButton: false,\n            closeOnClick: false\n            });\n             \n            map.on('mouseenter', 'reserve', function(e) {\n            // Change the cursor style as a UI indicator.\n            map.getCanvas().style.cursor = 'pointer';\n             \n            var coordinates = e.features[0].geometry.coordinates.slice();\n            var description =  `<h6> Location : ${e.features[0].properties.FIELD_NAME}</h6>\n            <p>Amount  of gas flared: ${e.features[0].properties.GAS_VOLUME.toLocaleString()} MCFN</p>\n            <p>Number of times gas was Flared :<i> ${e.features[0].properties.TIMES_FLARED} </i></p>`;\n            // Ensure that if the map is zoomed out such that multiple\n            // copies of the feature are visible, the popup appears\n            // over the copy being pointed to.\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n            }\n             \n            // Populate the popup and set its coordinates\n            // based on the feature found.\n            popup\n            .setLngLat(coordinates)\n            .setHTML(description)\n            .addTo(map);\n            });\n             \n            map.on('mouseleave', 'reserve', function() {\n            map.getCanvas().style.cursor = '';\n            popup.remove();\n            });\n\n\n                 \n                map.on('mouseenter', 'seaports', function(e) {\n                // Change the cursor style as a UI indicator.\n                map.getCanvas().style.cursor = 'pointer';\n                 \n                var coordinates = e.features[0].geometry.coordinates.slice();\n                var description =  `<h6> Location : ${e.features[0].properties.FIELD_NAME}</h6>`;\n                // Ensure that if the map is zoomed out such that multiple\n                // copies of the feature are visible, the popup appears\n                // over the copy being pointed to.\n                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n                }\n                 \n                // Populate the popup and set its coordinates\n                // based on the feature found.\n                popup\n                .setLngLat(coordinates)\n                .setHTML(description)\n                .addTo(map);\n                });\n                 \n                map.on('mouseleave', 'seaports', function() {\n                map.getCanvas().style.cursor = '';\n                popup.remove();\n                });\n\n\n\n                //Existing gas plants\n                map.on('mouseenter', 'gas-existing', function(e) {\n                    // Change the cursor style as a UI indicator.\n                    map.getCanvas().style.cursor = 'pointer';\n                     \n                    var coordinates = e.features[0].geometry.coordinates.slice();\n                    var description =  `<h6> Location : ${e.features[0].properties.NAME}</h6>`;\n                    // Ensure that if the map is zoomed out such that multiple\n                    // copies of the feature are visible, the popup appears\n                    // over the copy being pointed to.\n                    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n                    }\n                     \n                    // Populate the popup and set its coordinates\n                    // based on the feature found.\n                    popup\n                    .setLngLat(coordinates)\n                    .setHTML(description)\n                    .addTo(map);\n                    });\n                     \n                    map.on('mouseleave', 'gas-existing', function() {\n                    map.getCanvas().style.cursor = '';\n                    popup.remove();\n                    });\n\n                \n\n\n\n                // map.on('style.load', () => {\n                //     map.rotateTo(180.0, {\n                //         duration: 20000\n                //     });\n                  \n                // })\n     \n\n        })\n\n    }\n\n    \n\n    render() {\n        const config = this.props;\n        const theme =  config.theme;\n        const currentChapterID = this.state.currentChapter.id;\n        return (\n            <div>\n\n                <Row>\n                    <Col md=\"4\">\n\n\n                    <div id=\"story\">\n            {/* <Container>\n                <Row>\n                  \n                    <Col md=\"8\" className=\"mx-auto\">\n                    <ButtonToolbar className=\"link\">\n \n <Button  className=\"btn-summary\">Reserve</Button>\n <Button  className=\"btn-summary\">Seaport</Button>\n <Button  className=\"btn-summary\">Road</Button>\n <Button  className=\"btn-summary\">Pipeline</Button>\n <Button  className=\"btn-summary\">Road</Button>\n <Button  className=\"btn-summary\">Vegetation</Button>\n <Button  className=\"btn-summary\">Conflicts</Button>\n <Button  className=\"btn-summary\">Existing Gas Plants</Button>\n <Button  className=\"btn-summary\">Road</Button>\n\n</ButtonToolbar>\n                    </Col>\n                </Row>\n           \n            </Container> */}\n                    {config.title &&\n                        <div id=\"header\" className={theme}>\n                            <h1>{config.title}</h1>\n                            {config.subtitle &&\n                                <h2>{config.subtitle}</h2>\n                            }\n                            {config.byline &&\n                               <div dangerouslySetInnerHTML={{__html: config.byline}}></div>\n                            }\n                        </div>\n                    }\n                   \n\n                    <div id=\"features\" className={alignments[config.alignment]}>\n                        {\n                            config.chapters.map(chapter => \n                                <Chapter key={chapter.id} theme={theme} {...chapter} currentChapterID={currentChapterID}/>\n                            )\n                        }\n                       \n                    </div>\n\n                  { config.legend &&  <div id=\"legend\" className={theme} >\n        This is a Legend Box\n    </div>\n                }\n                    {config.footer &&\n                        <div id=\"footer\" className={theme}>\n                            <p>{config.footer}</p>\n                        </div>\n                    }\n\n             \n                </div>\n\n\n                    </Col>\n\n\n                    <Col md=\"8\">\n\n                <div ref={el => this.mapContainer = el} className=\"absolute top right left bottom\" />\n                    </Col>\n                </Row>\n               \n\n               \n            </div>\n        );\n    }\n\n}\n\nfunction Chapter({id, theme, title, image, description, currentChapterID}) {\n    const classList = id === currentChapterID ? \"step active\" : \"step\";\n    return (\n        <Fragment>\n        <div id={id} className={classList}>\n            <div className={theme}>\n                { title &&\n                    <h3 className=\"title\">{title}</h3>\n                }\n                { image &&\n                    <img src={image} alt={title}></img>\n                }\n                { description &&\n                 <section dangerouslySetInnerHTML={{__html: description}}></section>\n              \n                }\n            </div>\n        </div>\n        \n        </Fragment>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var config = {\n    style: 'mapbox://styles/codekyd/ck6xowui21ty81ipb5i994bc7',\n    accessToken: 'pk.eyJ1IjoiY29kZWt5ZCIsImEiOiJjazZxazBzeXowMXJvM3NuMW5pc3R0YTRlIn0.798H93rU-1ikw0jJV1HgCQ',\n    showMarkers: true,\n    theme: 'light',\n    alignment: 'left',\n    title: 'GasHub',\n    byline: '',\n    footer: 'Source: source citations, etc.',\n    chapters: [\n        {\n            id: 'reserve',\n            title: 'Natural Gas Reserve ',\n            image: './gas.jpg',\n            description: ' According to Nigerian National Petroleum Corporation (NNPC), Nigeria has around 202 trillion cubic feet (Tcf) of proven gas reserves plus about 600 TCF unproven gas reserves. There is no data for the number of gas reserves in Delta state, so we aggregated the total number of flared gas, spread across 15 LGA\\'s in Delta, totaling 528 million cube feet (Mcf). We have about 42 onshore locations where gas are been flared in Delta State.',\n            location: {\n                center: [6, 5.6],\n                zoom: 8.4,\n                pitch: 0,\n                bearing: 0\n            },\n            onChapterEnter: [\n            \n            ],\n            onChapterExit: [\n         \n            ],\n          \n        },\n\n        {\n            id: 'seaports',\n            title: 'Available Seaports ',\n            image: './seaport.jpg',\n            description: `Delta state has three (3) seaports spread across three (3) local governments area in Delta state. Namely <li>Burutu ( with a depth of 21 - 25 feet, 6.4m - 7.6 m)</li> <li>Sapele ( with a depth of 16 - 20 feet, 4.9m - 6.1 m) </li> <li>Warri ( with a depth of 21 - 25, feet 6.4m - 7.6 m).</li>`,\n            location: {\n                center: [6, 5.7],\n                zoom: 8.5,\n                pitch: 40,\n                bearing: 0\n            },\n            onChapterEnter: [\n            \n            ],\n            onChapterExit: [\n         \n            ],\n          \n        },\n\n        {\n            id: 'waters',\n            title: 'Major Rivers ',\n            // image: './path/to/image/source.png',\n            description: 'Out of the 15 local governments that flare gas, thirteen (13) out of fifteen (15) have major rivers passing through them. Namely: <li>Burutu</li> <li>Sapele</li> <li>Warri South</li> <li>Warri North</li> <li>Warri south-west</li> <li>Ughelli North</li><li>Ughelli South</li> <li>Ndokwa East</li> <li>Ndokwa West</li> <li>Udu</li> <li>Isoko North</li><li>Isoko South</li> <li>Uvwie</li>',\n            location: {\n                center: [6, 5.7],\n                zoom: 8.5,\n                pitch: 20,\n                bearing: 0\n            },\n            onChapterEnter: [\n            \n            ],\n            onChapterExit: [\n         \n            ],\n          \n        },\n\n       \n        {\n            id: 'gas-existing', \n            title: 'Existing Gas Plants',\n            // image: './path/to/image/source.png',\n            description: 'In Delta state, there are two (2) existing gas plant, located at Ughelli North and Ughelli South.',\n            location: {\n                center: [6, 5.7],\n                zoom: 8.8,\n                pitch: 30,\n                bearing: -30\n            },\n            onChapterEnter: [\n            \n            ],\n            onChapterExit: [],\n          \n        },\n        {\n            id: 'pipelines', \n            title: 'Pipelines',\n            // description: 'Copy these sections to add to your story.',\n            location: {\n                center: [6, 5.7],\n                zoom: 8.8,\n                pitch: 0,\n                bearing: 0\n            },\n            onChapterEnter: [\n            \n            ],\n            onChapterExit: [],\n          \n        },\n\n        {\n            id: 'road-express', \n            title: 'Road Expressway',\n            // description: 'Copy these sections to add to your story.',\n            location: {\n                center: [6, 5.7],\n                zoom: 8.5,\n                pitch: 0,\n                bearing: 0\n            },\n            onChapterEnter: [\n            \n            ],\n            onChapterExit: [],\n          \n        },\n\n        {\n            id: 'settlement', \n            title: 'Settlements',\n            // description: 'Copy these sections to add to your story.',\n            location: {\n                center: [6, 5.7],\n                zoom: 8.5,\n                pitch: 0,\n                bearing: 0\n            },\n            onChapterEnter: [\n            \n            ],\n            onChapterExit: [],\n          \n        },\n\n        {\n            id: 'bunkering', \n            title: 'Bunkering',\n            // description: 'Copy these sections to add to your story.',\n            location: {\n                center: [6, 5.7],\n                zoom: 8.5,\n                pitch: 0,\n                bearing: 0\n            },\n            onChapterEnter: [\n            \n            ],\n            onChapterExit: [],\n          \n        }\n\n\n\n\n\n    ]\n};\n\nexport default config;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport config from './config.js';\n\n\n\nReactDOM.render(<App {...config}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}